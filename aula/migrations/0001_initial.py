# Generated by Django 5.0.3 on 2025-03-03 16:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('curcod', models.IntegerField(db_column='CurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('curnom', models.CharField(db_column='CurNom', max_length=80, verbose_name='Nombre')),
                ('curfre', models.BooleanField(db_column='CurFre', default=False, verbose_name='Gratuitos')),
                ('curnummod', models.IntegerField(db_column='CurNumMod', default=0, verbose_name='Número de módulos')),
                ('cursrcpdf', models.FileField(blank=True, db_column='CurSrcPdf', null=True, upload_to='cursos_pdf/', verbose_name='Archivo PDF')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'curso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstadoExamen',
            fields=[
                ('estexacod', models.AutoField(db_column='EstExaCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('estexanom', models.CharField(db_column='EstExaNom', max_length=40, unique=True, verbose_name='Nombre de Estado')),
            ],
            options={
                'verbose_name': 'EstadoExamen',
                'verbose_name_plural': 'EstadosExamenes',
                'db_table': 'estado_examen',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstadoRegistro',
            fields=[
                ('estregcod', models.AutoField(db_column='EstRegCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('estregnom', models.CharField(db_column='EstRegNom', max_length=40, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'EstadoRegistro',
                'verbose_name_plural': 'EstadosRegistro',
                'db_table': 'estado_registro',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MatriculaPrograma',
            fields=[
                ('matprocod', models.AutoField(db_column='MatProCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('matprofecini', models.DateField(blank=True, db_column='MatProFecIni', null=True, verbose_name='Fecha de inicio')),
                ('matprofecfin', models.DateField(blank=True, db_column='MatProFecFin', null=True, verbose_name='Fecha de finalización')),
                ('matproter', models.BooleanField(db_column='MatProTer', default=False, verbose_name='Programa terminado')),
                ('matpropun', models.DecimalField(db_column='MatProPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('matpropor', models.DecimalField(db_column='MatProPor', decimal_places=2, default=0.0, max_digits=5, verbose_name='Porcentaje de avance')),
            ],
            options={
                'verbose_name': 'Matricula para Programa',
                'verbose_name_plural': 'Matricula para Programas',
                'db_table': 'matricula_programa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('modcod', models.AutoField(db_column='ModCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('modnom', models.CharField(db_column='ModNom', max_length=100, verbose_name='Nombre')),
                ('modsrctxt', models.FileField(blank=True, db_column='ModSrcTxt', null=True, upload_to='modulo_pdf/', verbose_name='Archivo TXT')),
            ],
            options={
                'verbose_name': 'Modulo',
                'verbose_name_plural': 'Modulos',
                'db_table': 'modulo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('precod', models.AutoField(db_column='preCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('pretex', models.CharField(db_column='PreTex', max_length=300, verbose_name='Texto')),
                ('preexp', models.CharField(db_column='PreExp', default='', max_length=300, verbose_name='Explicación')),
                ('prenummod', models.IntegerField(db_column='PreNumMod', default=0, verbose_name='Número de modulo al que pertenece')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Pregunta',
                'db_table': 'Pregunta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('procod', models.IntegerField(db_column='ProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('pronom', models.CharField(db_column='ProNom', max_length=100, verbose_name='Nombre')),
                ('pronomeng', models.CharField(blank=True, db_column='ProNomEng', default='', max_length=100, verbose_name='Nombre en inglés')),
                ('pronomdip', models.CharField(blank=True, db_column='ProNomDip', default='', max_length=100, verbose_name='Nombre de diploma')),
                ('procodosh', models.CharField(db_column='ProCodOsh', max_length=30, verbose_name='Codigo osha')),
                ('pronumhor', models.IntegerField(db_column='ProNumHor', default=0, verbose_name='Número de horas')),
                ('pronumcur', models.IntegerField(db_column='ProNumCur', default=0, verbose_name='Número de cursos')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
                'db_table': 'programa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RegistroExamenCurso',
            fields=[
                ('regexacurcod', models.AutoField(db_column='RegExaCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('regexacurpun', models.DecimalField(db_column='RegExaCurPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('regexacurint', models.IntegerField(db_column='RegExaCurInt', default=0, verbose_name='Número de intentos')),
            ],
            options={
                'verbose_name': 'Registro de Examen por Curso',
                'verbose_name_plural': 'Registros de Exámenes por Curso',
                'db_table': 'registro_examen_curso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RegistroExamenPrograma',
            fields=[
                ('regexaprocod', models.AutoField(db_column='RegExaProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('regexapropun', models.DecimalField(db_column='RegExaProPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('regexaproint', models.IntegerField(db_column='RegExaProInt', default=0, verbose_name='Número de intentos')),
            ],
            options={
                'verbose_name': 'Registro de Examen por Programa',
                'verbose_name_plural': 'Registros de Exámenes por Programa',
                'db_table': 'registro_examen_programa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RespuestaExamenCurso',
            fields=[
                ('rescurcod', models.AutoField(db_column='RepCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('rescurpun', models.DecimalField(db_column='ResCurPun', decimal_places=2, max_digits=5, verbose_name='Puntuacion')),
                ('rescurfec', models.DateTimeField(auto_now_add=True, db_column='ResCurFec', verbose_name='Fecha de respuesta')),
            ],
            options={
                'verbose_name': 'Respuesta de Examen por Curso',
                'verbose_name_plural': 'Respuestas de Exámenes por Curso',
                'db_table': 'respuesta_examen_curso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RespuestaExamenPrograma',
            fields=[
                ('resprocod', models.AutoField(db_column='ResProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('respropun', models.DecimalField(db_column='ResProPun', decimal_places=2, max_digits=5, verbose_name='Puntuacion')),
                ('resprofec', models.DateTimeField(auto_now_add=True, db_column='ResProFec', verbose_name='Fecha de respuesta')),
            ],
            options={
                'verbose_name': 'Respuesta de Examen por Programa',
                'verbose_name_plural': 'Respuestas de Exámenes por Programa',
                'db_table': 'respuesta_examen_programa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('exacurcod', models.OneToOneField(db_column='ExaCurCod', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='aula.curso', verbose_name='Codigo Curso')),
                ('exanumpre', models.IntegerField(db_column='ExaNumPre', default=0, verbose_name='Número de preguntas')),
            ],
            options={
                'verbose_name': 'Examen',
                'verbose_name_plural': 'Examenes',
                'db_table': 'examen',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='curestregcod',
            field=models.ForeignKey(db_column='CurEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg'),
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('altcod', models.AutoField(db_column='AltCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('alttex', models.CharField(db_column='AltTex', max_length=500, verbose_name='Texto')),
                ('altcor', models.BooleanField(db_column='AltCor', verbose_name='Correcto')),
                ('altestregcod', models.ForeignKey(db_column='AltEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg')),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
                'db_table': 'alternativa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MatriculaCurso',
            fields=[
                ('matcurcod', models.AutoField(db_column='MatCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('matcurfecini', models.DateField(blank=True, db_column='MatCurFecIni', null=True, verbose_name='Fecha de inicio')),
                ('matcurfecfin', models.DateField(blank=True, db_column='MatCurFecFin', null=True, verbose_name='Fecha de finalización')),
                ('matcurter', models.BooleanField(db_column='MatCurTer', default=False, verbose_name='Curso terminado')),
                ('matcurcurcod', models.ForeignKey(db_column='MatCurCurCod', on_delete=django.db.models.deletion.PROTECT, to='aula.curso', verbose_name='Código Curso')),
            ],
            options={
                'verbose_name': 'Matricula para Curso',
                'verbose_name_plural': 'Matricula para Cursos',
                'db_table': 'matricula_curso',
                'managed': True,
            },
        ),
    ]
