# Generated by Django 5.0.3 on 2025-02-07 22:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('curcod', models.IntegerField(db_column='CurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('curnom', models.CharField(db_column='CurNom', max_length=80, verbose_name='Nombre')),
                ('curfre', models.BooleanField(db_column='CurFre', default=False, verbose_name='Gratuitos')),
                ('curnummod', models.IntegerField(db_column='CurNumMod', default=0, verbose_name='Número de módulos')),
                ('cursrcpdf', models.FileField(blank=True, db_column='CurSrcPdf', null=True, upload_to='cursos_pdf/', verbose_name='Archivo PDF')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'curso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstadoExamen',
            fields=[
                ('estexacod', models.AutoField(db_column='EstExaCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('estexanom', models.CharField(db_column='EstExaNom', max_length=40, unique=True, verbose_name='Nombre de Estado')),
            ],
            options={
                'verbose_name': 'EstadoExamen',
                'verbose_name_plural': 'EstadosExamenes',
                'db_table': 'estado_examen',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstadoRegistro',
            fields=[
                ('estregcod', models.AutoField(db_column='EstRegCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('estregnom', models.CharField(db_column='EstRegNom', max_length=40, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'EstadoRegistro',
                'verbose_name_plural': 'EstadosRegistro',
                'db_table': 'estado_registro',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EstudianteUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('estusernom', models.CharField(db_column='EstUserNom', max_length=60, verbose_name='Nombre')),
                ('estuserape', models.CharField(db_column='EstUserApe', max_length=60, verbose_name='Apellidos')),
                ('estuserdocide', models.CharField(db_column='EstUserDocIde', max_length=50, unique=True, verbose_name='Documento de identidad')),
                ('estusercodosh', models.CharField(blank=True, db_column='EstUserCodOsh', max_length=9, null=True, unique=True, verbose_name='Código Osha Institute')),
                ('estuserpai', models.CharField(blank=True, db_column='EstUserPai', max_length=50, null=True, verbose_name='Pais')),
                ('estuserciu', models.CharField(blank=True, db_column='EstUserCiu', max_length=50, null=True, verbose_name='Ciudad')),
                ('estuserdir', models.CharField(blank=True, db_column='EstUserDir', max_length=100, null=True, verbose_name='Dirección')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('exacurcod', models.OneToOneField(db_column='ExaCurCod', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='aula.curso', verbose_name='Codigo Curso')),
                ('exanumpre', models.IntegerField(db_column='ExaNumPre', default=0, verbose_name='Número de preguntas')),
                ('exaestregcod', models.ForeignKey(db_column='ExaEstRegCod', default=1, on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Codigo EstReg')),
            ],
            options={
                'verbose_name': 'Examen',
                'verbose_name_plural': 'Examenes',
                'db_table': 'examen',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='curestregcod',
            field=models.ForeignKey(db_column='CurEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg'),
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('modcod', models.AutoField(db_column='ModCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('modnom', models.CharField(db_column='ModNom', max_length=100, verbose_name='Nombre')),
                ('modsrctxt', models.FileField(blank=True, db_column='ModSrcTxt', null=True, upload_to='modulo_pdf/', verbose_name='Archivo TXT')),
                ('modcurcod', models.ForeignKey(db_column='ModCurCod', on_delete=django.db.models.deletion.PROTECT, to='aula.curso', verbose_name='Codigo Curso')),
                ('modestregcod', models.ForeignKey(db_column='ModEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Codigo EstReg')),
            ],
            options={
                'verbose_name': 'Modulo',
                'verbose_name_plural': 'Modulos',
                'db_table': 'modulo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('precod', models.AutoField(db_column='preCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('pretex', models.CharField(db_column='PreTex', max_length=300, verbose_name='Texto')),
                ('preexp', models.CharField(db_column='PreExp', default='', max_length=300, verbose_name='Explicación')),
                ('prenummod', models.IntegerField(db_column='PreNumMod', default=0, verbose_name='Número de modulo al que pertenece')),
                ('preestregcod', models.ForeignKey(db_column='PreEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Codigo EStReg')),
                ('preexacod', models.ForeignKey(db_column='PreExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.examen', verbose_name='Codigo EXamen')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Pregunta',
                'db_table': 'Pregunta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('altcod', models.AutoField(db_column='AltCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('alttex', models.CharField(db_column='AltTex', max_length=500, verbose_name='Texto')),
                ('altcor', models.BooleanField(db_column='AltCor', verbose_name='Correcto')),
                ('altestregcod', models.ForeignKey(db_column='AltEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg')),
                ('altprecod', models.ForeignKey(db_column='AltPreCod', on_delete=django.db.models.deletion.PROTECT, to='aula.pregunta', verbose_name='Código Pregunta')),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
                'db_table': 'alternativa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('procod', models.IntegerField(db_column='ProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('pronom', models.CharField(db_column='ProNom', max_length=100, verbose_name='Nombre')),
                ('pronomeng', models.CharField(blank=True, db_column='ProNomEng', default='', max_length=100, verbose_name='Nombre en inglés')),
                ('pronomdip', models.CharField(blank=True, db_column='ProNomDip', default='', max_length=100, verbose_name='Nombre de diploma')),
                ('procodosh', models.CharField(db_column='ProCodOsh', max_length=30, verbose_name='Codigo osha')),
                ('pronumhor', models.IntegerField(db_column='ProNumHor', default=0, verbose_name='Número de horas')),
                ('pronumcur', models.IntegerField(db_column='ProNumCur', default=0, verbose_name='Número de cursos')),
                ('cursos', models.ManyToManyField(blank=True, related_name='programas', to='aula.curso', verbose_name='Cursos')),
                ('proestregcod', models.ForeignKey(db_column='ProEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
                'db_table': 'programa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MatriculaCurso',
            fields=[
                ('matcurcod', models.AutoField(db_column='MatCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('matcurfecini', models.DateField(blank=True, db_column='MatCurFecIni', null=True, verbose_name='Fecha de inicio')),
                ('matcurfecfin', models.DateField(blank=True, db_column='MatCurFecFin', null=True, verbose_name='Fecha de finalización')),
                ('matcurter', models.BooleanField(db_column='MatCurTer', default=False, verbose_name='Curso terminado')),
                ('matcurcurcod', models.ForeignKey(db_column='MatCurCurCod', on_delete=django.db.models.deletion.PROTECT, to='aula.curso', verbose_name='Código Curso')),
                ('matcurestcod', models.ForeignKey(db_column='MatCurEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Código Estudiante')),
                ('matcurestregcod', models.ForeignKey(db_column='MatCurEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Código EstReg')),
            ],
            options={
                'verbose_name': 'Matricula para Curso',
                'verbose_name_plural': 'Matricula para Cursos',
                'db_table': 'matricula_curso',
                'managed': True,
                'unique_together': {('matcurestcod', 'matcurcurcod')},
            },
        ),
        migrations.CreateModel(
            name='MatriculaPrograma',
            fields=[
                ('matprocod', models.AutoField(db_column='MatProCod', primary_key=True, serialize=False, verbose_name='Codigo')),
                ('matprofecini', models.DateField(blank=True, db_column='MatProFecIni', null=True, verbose_name='Fecha de inicio')),
                ('matprofecfin', models.DateField(blank=True, db_column='MatProFecFin', null=True, verbose_name='Fecha de finalización')),
                ('matproter', models.BooleanField(db_column='MatProTer', default=False, verbose_name='Programa terminado')),
                ('matpropun', models.DecimalField(db_column='MatProPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('matpropor', models.DecimalField(db_column='MatProPor', decimal_places=2, default=0.0, max_digits=5, verbose_name='Porcentaje de avance')),
                ('matproestcod', models.ForeignKey(db_column='MatProEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Codigo Estudiante')),
                ('matproestregcod', models.ForeignKey(db_column='MatProEstRegCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoregistro', verbose_name='Codigo EstReg')),
                ('matproprocod', models.ForeignKey(db_column='MatProProCod', on_delete=django.db.models.deletion.PROTECT, to='aula.programa', verbose_name='Codigo Programa')),
            ],
            options={
                'verbose_name': 'Matricula para Programa',
                'verbose_name_plural': 'Matricula para Programas',
                'db_table': 'matricula_programa',
                'managed': True,
                'unique_together': {('matproestcod', 'matproprocod')},
            },
        ),
        migrations.CreateModel(
            name='RespuestaExamenPrograma',
            fields=[
                ('resprocod', models.AutoField(db_column='ResProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('respropun', models.DecimalField(db_column='ResProPun', decimal_places=2, max_digits=5, verbose_name='Puntuacion')),
                ('resprofec', models.DateTimeField(auto_now_add=True, db_column='ResProFec', verbose_name='Fecha de respuesta')),
                ('resproaltcod', models.ForeignKey(db_column='ResProAltCod', on_delete=django.db.models.deletion.PROTECT, to='aula.alternativa', verbose_name='Alternativa seleccionada')),
                ('resproestcod', models.ForeignKey(db_column='ResProEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Codigo Estudiante')),
                ('resproprecod', models.ForeignKey(db_column='ReaProPreCod', on_delete=django.db.models.deletion.PROTECT, to='aula.pregunta', verbose_name='Pregunta')),
                ('resproprocod', models.ForeignKey(db_column='ResProProCod', on_delete=django.db.models.deletion.PROTECT, to='aula.programa', verbose_name='Codigo Programa')),
                ('resproexacod', models.ForeignKey(db_column='ResProExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.examen', verbose_name='Codigo Examen')),
            ],
            options={
                'verbose_name': 'Respuesta de Examen por Programa',
                'verbose_name_plural': 'Respuestas de Exámenes por Programa',
                'db_table': 'respuesta_examen_programa',
                'managed': True,
                'unique_together': {('resproestcod', 'resproprocod', 'resproexacod', 'resproprecod')},
            },
        ),
        migrations.CreateModel(
            name='RespuestaExamenCurso',
            fields=[
                ('rescurcod', models.AutoField(db_column='RepCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('rescurpun', models.DecimalField(db_column='ResCurPun', decimal_places=2, max_digits=5, verbose_name='Puntuacion')),
                ('rescurfec', models.DateTimeField(auto_now_add=True, db_column='ResCurFec', verbose_name='Fecha de respuesta')),
                ('rescuraltcod', models.ForeignKey(db_column='ResCurAltCod', on_delete=django.db.models.deletion.PROTECT, to='aula.alternativa', verbose_name='Alternativa seleccionada')),
                ('rescurestcod', models.ForeignKey(db_column='ResCurEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Codigo Estudiante')),
                ('rescurprecod', models.ForeignKey(db_column='ResCurPreCod', on_delete=django.db.models.deletion.PROTECT, to='aula.pregunta', verbose_name='Pregunta')),
                ('rescurexacod', models.ForeignKey(db_column='ResCurExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.examen', verbose_name='Codigo Examen')),
            ],
            options={
                'verbose_name': 'Respuesta de Examen por Curso',
                'verbose_name_plural': 'Respuestas de Exámenes por Curso',
                'db_table': 'respuesta_examen_curso',
                'managed': True,
                'unique_together': {('rescurestcod', 'rescurexacod', 'rescurprecod')},
            },
        ),
        migrations.CreateModel(
            name='RegistroExamenPrograma',
            fields=[
                ('regexaprocod', models.AutoField(db_column='RegExaProCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('regexapropun', models.DecimalField(db_column='RegExaProPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('regexaproint', models.IntegerField(db_column='RegExaProInt', default=0, verbose_name='Número de intentos')),
                ('regexaproestcod', models.ForeignKey(db_column='RegExProEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Matrícula del Programa')),
                ('regexaproestexacod', models.ForeignKey(db_column='RegExProEstExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoexamen', verbose_name='Estado del Examen')),
                ('regexaproprocod', models.ForeignKey(db_column='RegExProProCod', on_delete=django.db.models.deletion.PROTECT, to='aula.programa', verbose_name='Matrícula del Programa')),
                ('regexaproexacod', models.ForeignKey(db_column='RegExProExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.examen', verbose_name='Código del Examen')),
            ],
            options={
                'verbose_name': 'Registro de Examen por Programa',
                'verbose_name_plural': 'Registros de Exámenes por Programa',
                'db_table': 'registro_examen_programa',
                'managed': True,
                'unique_together': {('regexaproestcod', 'regexaproprocod', 'regexaproexacod')},
            },
        ),
        migrations.CreateModel(
            name='RegistroExamenCurso',
            fields=[
                ('regexacurcod', models.AutoField(db_column='RegExaCurCod', primary_key=True, serialize=False, verbose_name='Código')),
                ('regexacurpun', models.DecimalField(db_column='RegExaCurPun', decimal_places=2, default=0.0, max_digits=5, verbose_name='Puntuación')),
                ('regexacurint', models.IntegerField(db_column='RegExaCurInt', default=0, verbose_name='Número de intentos')),
                ('regexacurcurcod', models.ForeignKey(db_column='RegExaCurCurCod', on_delete=django.db.models.deletion.PROTECT, to='aula.curso', verbose_name='Matrícula del Curso')),
                ('regexacurestcod', models.ForeignKey(db_column='RegExaProEstCod', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Matrícula del Programa')),
                ('regexacurestexacod', models.ForeignKey(db_column='RegExaCurEstExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.estadoexamen', verbose_name='Estado del Examen')),
                ('regexacurexacod', models.ForeignKey(db_column='RegExaCurExaCod', on_delete=django.db.models.deletion.PROTECT, to='aula.examen', verbose_name='Código del Examen')),
            ],
            options={
                'verbose_name': 'Registro de Examen por Curso',
                'verbose_name_plural': 'Registros de Exámenes por Curso',
                'db_table': 'registro_examen_curso',
                'managed': True,
                'unique_together': {('regexacurestcod', 'regexacurcurcod', 'regexacurexacod')},
            },
        ),
    ]
